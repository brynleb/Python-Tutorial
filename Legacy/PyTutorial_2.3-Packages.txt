# PyTutorial 2.3 - Installing packages using pip

# pip is the Package Installer for Python.
# It provides a simple way of installing third-party packages from the Python Package Index (and other indexes).
# These are repositories of Python software developed and shared by the Python community.

#-------------------------------------
# To get the version of pip you currently have installed, from a terminal/command prompt type:

>> pip --version

pip 22.0.4 from C:\Python37\lib\site-packages\pip (python 3.7)

# To upgrade pip to the latest version, type:

>> python -m pip install --upgrade pip

Requirement already satisfied: pip in c:\python37\lib\site-packages (22.0.4)
Collecting pip
  Downloading pip-22.1.2-py3-none-any.whl (2.1 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.1/2.1 MB 2.6 MB/s eta 0:00:00
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 22.0.4
    Uninstalling pip-22.0.4:
      Successfully uninstalled pip-22.0.4
Successfully installed pip-22.1.2

#-------------------------------------
# To get a list of all available commands and options for pip:

>> pip help

Usage:
  pip <command> [options]

Commands:
  install                     Install packages.
  download                    Download packages.
  uninstall                   Uninstall packages.
  freeze                      Output installed packages in requirements format.
  list                        List installed packages.
  show                        Show information about installed packages.
  check                       Verify installed packages have compatible dependencies.
  config                      Manage local and global configuration.
  search                      Search PyPI for packages.
  cache                       Inspect and manage pip's wheel cache.
  index                       Inspect information available from package indexes.
  wheel                       Build wheels from your requirements.
  hash                        Compute hashes of package archives.
  completion                  A helper command used for command completion.
  debug                       Show information useful for debugging.
  help                        Show help for commands.

General Options:
  -h, --help                  Show help.
  --debug                     Let unhandled exceptions propagate outside the main subroutine,  
                              instead of logging them to stderr.
  --isolated                  Run pip in an isolated mode, ignoring environment variables and  
                              user configuration.
  --require-virtualenv        Allow pip to only run in a virtual environment; exit with an     
                              error otherwise.
  -v, --verbose               Give more output. Option is additive, and can be used up to 3    
                              times.
  -V, --version               Show version and exit.
  -q, --quiet                 Give less output. Option is additive, and can be used up to 3    
                              times (corresponding to WARNING, ERROR, and CRITICAL logging     
                              levels).
  --log <path>                Path to a verbose appending log.
  --no-input                  Disable prompting for input.
  --proxy <proxy>             Specify a proxy in the form [user:passwd@]proxy.server:port.     
  --retries <retries>         Maximum number of retries each connection should attempt
                              (default 5 times).
  --timeout <sec>             Set the socket timeout (default 15 seconds).
  --exists-action <action>    Default action when a path already exists: (s)witch, (i)gnore,   
                              (w)ipe, (b)ackup, (a)bort.
  --trusted-host <hostname>   Mark this host or host:port pair as trusted, even though it      
                              does not have valid or any HTTPS.
  --cert <path>               Path to PEM-encoded CA certificate bundle. If provided,
                              overrides the default. See 'SSL Certificate Verification' in     
                              pip documentation for more information.
  --client-cert <path>        Path to SSL client certificate, a single file containing the     
                              Don't periodically check PyPI to determine whether a new
                              version of pip is available for download. Implied with --no-     
                              index.
  --no-color                  Suppress colored output.
  --no-python-version-warning
                              Silence deprecation warnings for upcoming unsupported Pythons.   
  --use-feature <feature>     Enable new functionality, that may be backward incompatible.     
  --use-deprecated <feature>  Enable deprecated functionality, that will be removed in the     
                              future.

# You can also get detailed help for a specific command (e.g. install):

>> pip help install

#-------------------------------------

# To list the packages currently installed use 'list':

>> pip list

# This provides both the package and version installed.
# To see if any of these are outdated, use the --outdated option:

>> pip list --outdated

#-------------------------------------

# To install a new package use 'install':

>> pip install 'package name'

#-------------------------------------

# To upgrade a package to the latest version, type:

>> pip install -U 'package name'

#-------------------------------------

# To uninstall a package, use 'uninstall'

>> pip uninstall 'package name'

# Type 'y' to confirm the uninstall.

#-------------------------------------

# To get a list of installed packages in a requirements format, use 'freeze':

>> pip freeze

# To export this list to a file called 'Requirements.txt':

>> pip freeze > Requirements.txt

#-------------------------------------

# To automatically nstall all the packages listed in 'Requirements.txt' (with their corresponding versions):

>> pip install -r Requirements.txt
